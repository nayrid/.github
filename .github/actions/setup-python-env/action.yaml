name: "Setup Python Environment - Poetry"
description: "Set up the build environment for a Python project with Poetry"

inputs:
  runtime_version:
    description: "The default Python runtime version to run builds on"
    required: false
    default: "3.13.x"
  publishing_branch_regex:
    description: "The regular expression to determine if a certain branch build should be published"
    required: false
    default: '(?:(?:(?:main\/)?(\d+(?:\.\d+)*(?:\.x)?)))|master|main|trunk'
  working_dir:
    description: "The directory containing the poetry project to setup"
    required: false
    default: "${{ github.workspace }}"
  activate_venv:
    description: "Whether to install dependencies and activate the poetry virtual environment for this project"
    required: false
    default: "false"

outputs:
  publishing_branch:
    description: "The branch name, if it is a publishing branch, or an empty string if not"
    value: "${{ steps.branch-name.outputs.match }}"

runs:
  using: "composite"
  steps:
    - name: "checkout repository"
      uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4.2.2
      with:
        fetch-depth: 0
        submodules: true
    - name: "poetry"
      shell: "bash"
      run: pipx install poetry
    - name: "python ${{ inputs.runtime_version }}"
      uses: "actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38" # v5.4.0
      with:
        python-version: "${{ inputs.runtime_version }}"
        cache: "poetry"
    # Checks branch name to see if we're going to potentially publish this
    - name: "publishing branch"
      uses: "KyoriPowered/action-regex-match@1ff8ef914f6762fff8d5efd8d56ef88b5be5dd5c" # v4.0.0
      id: "branch-name"
      with:
        text: "${{ github.ref }}"
        regex: "^refs/heads/(?:${{ inputs.publishing_branch_regex }})$" # master or something like 0.8.x or 2.x
    - name: "poetry / install and activate environment"
      if: "${{ inputs.activate_venv }}"
      shell: "bash"
      working-directory: "${{ inputs.working_dir }}"
      run: |
        poetry sync
        VIRTUAL_ENV=$(poetry env info --path)
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> "$GITHUB_ENV"
        echo "$VIRTUAL_ENV/bin" > "$GITHUB_PATH"
