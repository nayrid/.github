name: "Setup Java Environment"
description: "Set up the build environment for a Java project"

inputs:
  runtime_version:
    description: "The default Java runtime version to run builds on"
    required: true
  publishing_branch_regex:
    description: "The regular expression to determine if a certain branch build should be published"
    required: true
  gradle_warning_mode:
    description: "Warning mode to set on Gradle executions"
    required: false
    default: "fail"
outputs:
  publishing_branch:
    description: "The branch name, if it is a publishing branch, or an empty string if not"
    value: "${{ steps.branch-name.outputs.match }}"

runs:
  using: "composite"
  steps:
    - name: "checkout"
      uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4.2.2
      with:
        fetch-depth: 0
        submodules: true
    - name: "jdk ${{ inputs.runtime_version }}"
      uses: "actions/setup-java@3a4f6e1af504cf6a31855fa899c6aa5355ba6c12" # v4.7.0
      with:
        distribution: "zulu"
        java-version: "${{ inputs.runtime_version }}"
    - name: "gradle / validate wrapper"
      uses: "gradle/actions/wrapper-validation@94baf225fe0a508e581a564467443d0e2379123b" # v4.3.0
    # Checks branch name to see if we're going to potentially publish this
    - name: "publishing branch"
      uses: "KyoriPowered/action-regex-match@1ff8ef914f6762fff8d5efd8d56ef88b5be5dd5c" # v4.0.0
      id: "branch-name"
      with:
        text: "${{ github.ref }}"
        regex: "^refs/heads/(?:${{ inputs.publishing_branch_regex }})$" # master or something like 0.8.x or 2.x
    - name: "gradle / setup properties"
      env:
        WARNING_MODE: "${{ inputs.gradle_warning_mode }}"
      shell: bash
      run: |
        exec "$GITHUB_ACTION_PATH/setup-gradle-properties.sh"
    - name: "gradle / setup environment"
      uses: "gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b" # v4.3.0
      with:
        dependency-graph: "generate-and-upload"
        cache-read-only: "${{ (steps.branch-name.outputs.match == '' || github.event_name == 'pull_request') && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') }}"
